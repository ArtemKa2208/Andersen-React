[{"C:\\Users\\user\\Desktop\\Andersen React\\homework1\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Andersen React\\homework1\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Andersen React\\homework1\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Andersen React\\homework1\\src\\Beer.js":"4"},{"size":500,"mtime":1632569691768,"results":"5","hashOfConfig":"6"},{"size":4596,"mtime":1632752673961,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1632569691888,"results":"8","hashOfConfig":"6"},{"size":2086,"mtime":1632754082846,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"15bsoac",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\user\\Desktop\\Andersen React\\homework1\\src\\index.js",[],["21","22"],"C:\\Users\\user\\Desktop\\Andersen React\\homework1\\src\\App.js",["23","24","25"],"import './App.css';\nimport React, { useCallback, useEffect } from 'react';\nimport Beer from './Beer';\nimport { Button, ButtonToolbar, Modal } from 'C:/Users/user/Desktop/Andersen React/homework1/node_modules/react-bootstrap';\nconst App = () => {\n  const [beer,setBeer] = React.useState([]);\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // const [beerName,setBeerName] = React.useState();\n  const getBeer = async (page =  1, url = '') => {\n    let answer;\n    if(url){\n      answer = fetch(url)\n    }else{\n      console.log('1')\n      answer = fetch(`https://api.punkapi.com/v2/beers?page=${page}&per_page=80`)\n    }\n    answer\n    .then(res => res.json())\n    .then(\n      (result) => {\n        setBeer(result);\n      },\n      (err) => {\n        throw err;\n      }\n    )\n  }\n  const handlerInput = (event) => {\n    // setBeerName(event.target.value);\n    if(event.target.value.trim()){\n      getBeer(1,`https://api.punkapi.com/v2/beers?beer_name=${event.target.value}`)\n    }else{\n      getBeer();\n    }\n  }\n  const sortBy = (param) => {\n    console.log(beer[0])\n    let arrBeer = [...beer];\n    switch(param.target.value){\n      case 'Name':\n        arrBeer.sort((a,b) => a.name > b.name ? 1 : -1);\n        setBeer(arrBeer)\n        break;\n      case 'Abv(increasing)':\n        arrBeer.sort((a,b) => a.abv > b.abv ? 1 : -1);\n        setBeer(arrBeer)\n        break;\n      case 'Abv(decay)':\n        arrBeer.sort((a,b) => a.abv < b.abv ? 1 : -1);\n        setBeer(arrBeer)\n        break;\n      case 'Default':\n        getBeer();\n        break\n    }\n  }\n  useEffect(() =>{\n    getBeer();\n  },[])\n  \n  console.log(beer)\n\n  return (\n    <div className='App'>\n      <div className='tool-bar'>\n        <input placeholder='Enter the name of the beer' type='text' onChange = {handlerInput}/>\n      {/* <button onClick = {() => getBeer(1,`https://api.punkapi.com/v2/beers?beer_name=${beerName}`)} >Ok</button> */}\n        <select onChange = {sortBy}>\n          <option disabled selected>Sort by</option>\n          <option>Default</option>\n          <option>Name</option>\n          <option>Abv(increasing)</option>\n          <option>Abv(decay)</option>\n        </select>\n        <>\n        <Button variant=\"primary\" onClick={handleShow}>\n        Registration\n      </Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header >\n          <Modal.Title>Registration</Modal.Title>\n          <button onClick={handleClose}>x</button>\n        </Modal.Header>\n        <Modal.Body>\n          <label>Full name</label>\n          <input type=\"text\" />\n          <label>Date of Birth</label>\n          <input type=\"text\" />\n          <label>Password</label>\n          <input type=\"password\" minlength=\"6\"/>\n          <label>Email</label>\n          <input type=\"email\" />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n           Registration\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n      </div>\n      <div className = 'beerBox'>\n        {beer.map( (elem,index) => {\n          return(\n            <Beer \n            key = {index} \n            name = {elem.name} \n            tagline = {elem.tagline} \n            first_brewed = {elem.first_brewed} \n            description = {elem.description}\n            abv = {elem.abv}\n            attenuation_level = {elem.attenuation_level}\n            brewers_tips = {elem.brewers_tips}\n            contributed_by = {elem.contributed_by}\n            ebc = {elem.ebc}\n            ibu = {elem.ibu}\n            ph = {elem.ph}\n            srm = {elem.srm}\n            target_fg = {elem.target_fg}\n            target_og = {elem.target_og}\n            image_url = {elem.image_url}\n            volume = {elem.volume}\n            boil_volume = {elem.boil_volume}\n            ingredients = {elem.ingredients}\n            food_pairing = {elem.food_pairing}\n            />\n          )\n        })}\n      </div>\n      <div className='navigation'>\n        <button onClick = {() => getBeer(1)}>1</button>\n        <button onClick = {() => getBeer(2)}>2</button>\n        <button onClick = {() => getBeer(3)}>3</button>\n        <button onClick = {() => getBeer(4)}>4</button>\n        <button onClick = {() => getBeer(5)}>5</button>\n      </div>\n    </div>\n  );\n}\n\n// async function GetBeer(){\n//   let response = await \n//   const beer = await response.json();\n//   return beer;\n// }\n\nexport default App;\n","C:\\Users\\user\\Desktop\\Andersen React\\homework1\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Andersen React\\homework1\\src\\Beer.js",["26","27"],"export default (props) =>(\r\n      <div className='beerCard'>\r\n            <img  src={props.image_url || 'http://pngimg.com/uploads/bottle/bottle_PNG2931.png'} className='beerPhotos' alt ='photo' />\r\n            <h2 className='beer-name'>{props.name}</h2>\r\n            <p>{props.tagline}</p>\r\n            <p><strong>First brewed:</strong> {props.first_brewed}</p>\r\n            <p>{props.description}</p>\r\n            <p><strong>Abv:</strong> {props.abv}</p>\r\n            <p><strong>Attenuation level:</strong> {props.attenuation_level}</p>\r\n            <p><strong>Brewers tips:</strong> {props.brewers_tips}</p>\r\n            <p><strong>Contributed by:</strong> {props.contributed_by}</p>\r\n            <p><strong>Ebc:</strong> {props.ebc}</p>\r\n            <p><strong>Ibu:</strong> {props.ibu}</p>\r\n            <p><strong>Ph:</strong> {props.ph}</p>\r\n            <p><strong>Srm:</strong> {props.srm}</p>\r\n            <p><strong>Target FG:</strong> {props.target_fg}</p>\r\n            <p><strong>Target OG:</strong> {props.target_og}</p>\r\n            <p><strong>Volume:</strong> {props.volume.value} {props.volume.unit} </p>\r\n            <p><strong>Boil volume:</strong> {props.boil_volume.value} {props.boil_volume.unit}</p>\r\n            <h2>Ingredients:</h2>\r\n            <h3>Hops</h3>\r\n            {props.ingredients.hops.map( (elem,index) => {\r\n                  return(\r\n                        <p key = {'hops'+index}>{elem.name}: {elem.amount.value} {elem.amount.unit}</p>\r\n                  )\r\n            })}\r\n            <h3>Malt</h3>\r\n            {props.ingredients.malt.map( (elem,index) => {\r\n                  return(\r\n                        <p key = {'malt'+index}>{elem.name}: {elem.amount.value} {elem.amount.unit}</p>\r\n                  )\r\n            })}\r\n            <h3>Yeast</h3>\r\n            <p>{props.ingredients.yeast}</p>\r\n            <h2>Food pairing:</h2>\r\n            {props.food_pairing.map( (elem,index) => {\r\n                  return(\r\n                        <p key={'food'+index}>{index+1}) {elem}</p>\r\n                  )\r\n            })}\r\n      </div>\r\n)",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":2,"column":17,"nodeType":"34","messageId":"35","endLine":2,"endColumn":28},{"ruleId":"32","severity":1,"message":"36","line":4,"column":18,"nodeType":"34","messageId":"35","endLine":4,"endColumn":31},{"ruleId":"37","severity":1,"message":"38","line":42,"column":5,"nodeType":"39","messageId":"40","endLine":58,"endColumn":6},{"ruleId":"41","severity":1,"message":"42","line":1,"column":1,"nodeType":"43","endLine":42,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":3,"column":13,"nodeType":"46","endLine":3,"endColumn":136},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'ButtonToolbar' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]